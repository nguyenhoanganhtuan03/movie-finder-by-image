import createApiClient from "./api.service.js";

class HistoryService {
    constructor(baseUrl = "/api/history") {
        this.api = createApiClient(baseUrl);
    }

    // üÜï Th√™m l·ªãch s·ª≠ xem
    async addHistory(data) {
        try {
            const response = await this.api.post("/add_history", data);
            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi th√™m l·ªãch s·ª≠:", error.response?.data || error.message);
            throw error;
        }
    }

    // L·∫•y to√†n b·ªô l·ªãch s·ª≠ xem c·ªßa user
    async getHistoriesByUserId(userId) {
        try {
            const response = await this.api.get(`/histories/${userId}`);
            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi l·∫•y l·ªãch s·ª≠:", error.response?.data || error.message);
            throw error;
        }
    }

    // X√≥a to√†n b·ªô l·ªãch s·ª≠ c·ªßa user
    async deleteHistoriesByUserId(userId) {
        try {
            const response = await this.api.delete(`/histories/${userId}`);
            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi x√≥a to√†n b·ªô l·ªãch s·ª≠:", error.response?.data || error.message);
            throw error;
        }
    }

    // üÜï X√≥a m·ªôt m·ª•c l·ªãch s·ª≠ c·ª• th·ªÉ
    async deleteHistoryById(historyId) {
        try {
            const response = await this.api.delete(`/${historyId}`);
            return response.data;
        } catch (error) {
            console.error("‚ùå L·ªói khi x√≥a l·ªãch s·ª≠:", error.response?.data || error.message);
            throw error;
        }
    }
}

export default new HistoryService();
