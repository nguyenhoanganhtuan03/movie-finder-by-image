import os
import cv2
import numpy as np
import librosa
import soundfile as sf
import csv

from scenedetect import VideoManager, SceneManager
from scenedetect.detectors import ContentDetector
from scenedetect.video_splitter import split_video_ffmpeg


# H√†m t√°ch video b·∫±ng PySceneDetect v√† l∆∞u v√†o th∆∞ m·ª•c t∆∞∆°ng ·ª©ng
def cut_video_with_pyscenedetect(video_path, output_dir, threshold=30.0, min_scene_length=15):
    # T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
    os.makedirs(output_dir, exist_ok=True)

    # T·∫°o c√°c ƒë·ªëi t∆∞·ª£ng qu·∫£n l√Ω video v√† c·∫£nh
    video_manager = VideoManager([video_path])
    scene_manager = SceneManager()
    scene_manager.add_detector(ContentDetector(threshold=threshold, min_scene_len=min_scene_length))

    # Kh·ªüi t·∫°o x·ª≠ l√Ω video
    video_manager.set_downscale_factor()
    video_manager.start()
    scene_manager.detect_scenes(frame_source=video_manager)

    # L·∫•y danh s√°ch c√°c c·∫£nh
    scene_list = scene_manager.get_scene_list()
    print(f"[INFO] {len(scene_list)} c·∫£nh ƒë∆∞·ª£c ph√°t hi·ªán trong {os.path.basename(video_path)}.")

    if len(scene_list) == 0:
        print("‚ö†Ô∏è Kh√¥ng ph√°t hi·ªán c·∫£nh n√†o.")
        return 0

    # T√°ch v√† l∆∞u c√°c c·∫£nh th√†nh file .mp4
    split_video_ffmpeg(
        video_path,
        scene_list,
        output_file_template=os.path.join(output_dir, "scene_$SCENE_NUMBER.mp4")
    )

    video_manager.release()
    return len(scene_list)


# X·ª≠ l√Ω to√†n b·ªô th∆∞ m·ª•c ch·ª©a video
def process_folder_structure_with_scenedetect(input_root, output_root, threshold=30.0, min_scene_length=15):
    for subfolder in os.listdir(input_root):  # Duy·ªát qua t·ª´ng th∆∞ m·ª•c con trong input_root
        sub_path = os.path.join(input_root, subfolder)

        if os.path.isdir(sub_path):  # Ch·ªâ x·ª≠ l√Ω th∆∞ m·ª•c
            # T√¨m t·∫•t c·∫£ c√°c file .mp4 trong th∆∞ m·ª•c con
            mp4_files = [f for f in os.listdir(sub_path) if f.endswith(".mp4")]
            if not mp4_files:
                print(f"[B·ªè qua] Kh√¥ng t√¨m th·∫•y file .mp4 trong: {sub_path}")
                continue

            # T·∫°o th∆∞ m·ª•c ƒë·∫ßu ra t∆∞∆°ng ·ª©ng v·ªõi th∆∞ m·ª•c con trong input_root
            out_subdir = os.path.join(output_root, subfolder)
            os.makedirs(out_subdir, exist_ok=True)

            for mp4_file in mp4_files:
                video_path = os.path.join(sub_path, mp4_file)

                # T·∫°o th∆∞ m·ª•c ri√™ng cho t·ª´ng video n·∫øu c·∫ßn ph√¢n bi·ªát
                video_name = os.path.splitext(mp4_file)[0]
                out_video_dir = os.path.join(out_subdir, video_name)
                os.makedirs(out_video_dir, exist_ok=True)

                print(f"üé¨ ƒêang x·ª≠ l√Ω video: {video_path}")
                scene_count = cut_video_with_pyscenedetect(video_path, out_video_dir, threshold, min_scene_length)
                print(f"‚úÖ ƒê√£ t√°ch {scene_count} c·∫£nh v√† l∆∞u v√†o: {out_video_dir}\n")

# ƒê∆∞·ªùng d·∫´n v√†o/ra
input_video_path = 'E:\\Data\\Other_Film_Dataset'
output_video_path = 'E:\\Data\\Other_Film_Cut_Dataset'

# G·ªçi h√†m ch√≠nh
process_folder_structure_with_scenedetect(input_video_path, output_video_path, threshold=60.0, min_scene_length=20)